name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 730335365460.dkr.ecr.us-east-1.amazonaws.com/my-lambda-function

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: 730335365460.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: my-lambda-function-7ef7443
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Create or update Lambda function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          ECR_REGISTRY: 730335365460.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: my-lambda-function-7ef7443
          IMAGE_TAG: latest
          LAMBDA_ROLE_ARN: arn:aws:iam::730335365460:role/lambda-role-b76d667 # Replace with your IAM role ARN for Lambda
        run: |
          FUNCTION_NAME=my-lambda-function
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          VPC_CONFIG=$(aws ec2 describe-subnets --filters "Name=tag:Name,Values=private-subnet" --query "Subnets[0].SubnetId" --region $AWS_REGION --output text)
          SG_CONFIG=$(aws ec2 describe-security-groups --filters "Name=tag:Name,Values=lambda-security-group" --query "SecurityGroups[0].GroupId" --region $AWS_REGION --output text)
          EXISTING_FUNCTION=$(aws lambda get-function --function-name $FUNCTION_NAME --region $AWS_REGION 2>&1 || true)
          if echo "$EXISTING_FUNCTION" | grep -q 'ResourceNotFoundException'; then
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --package-type Image \
              --code ImageUri=$IMAGE_URI \
              --role $LAMBDA_ROLE_ARN \
              --vpc-config SubnetIds=$VPC_CONFIG,SecurityGroupIds=$SG_CONFIG \
              --region $AWS_REGION
          else
            echo "Updating existing Lambda function..."
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --image-uri $IMAGE_URI \
              --region $AWS_REGION
            aws lambda update-function-configuration \
              --function-name $FUNCTION_NAME \
              --vpc-config SubnetIds=$VPC_CONFIG,SecurityGroupIds=$
